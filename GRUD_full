所花的训练时间增大，但当数据增加时，模型的性能提高的更快。
未使用dropout等正则化方法。
面向数值型的问题，不知道怎么使用AUC。

GRUD(
  (grud1): GRUD(in_features=66,out_features=2048)
  (grud2): GRUD(in_features=2048,out_features=2048)
  (grud3): GRUD(in_features=2048,out_features=2048)
  (grud4): GRUD(in_features=2048,out_features=2048)
  (out): Sequential(
    (0): Linear(in_features=2048, out_features=66, bias=True)
  )
)
  1 0.0009307 0.0068367 0
  2 0.0003028 0.0037195 0
  3 0.0001448 0.0024481 0
  4 0.0000745 0.0015289 0
  5 0.0000850 0.0010932 0
  6 0.0000751 0.0009189 0
  7 0.0000491 0.0008025 0
  8 0.0000520 0.0007442 0
  9 0.0000423 0.0006675 0
 10 0.0000335 0.0006240 0
 11 0.0000324 0.0005871 0
 12 0.0000227 0.0005384 0
 13 0.0000502 0.0005537 0
 14 0.0001502 0.0007226 1
 15 0.0000846 0.0006019 2
 16 0.0000269 0.0004879 3
 17 0.0000995 0.0005561 0
 18 0.0000249 0.0004597 1
 19 0.0000422 0.0004404 0
 20 0.0000206 0.0003988 0
 21 0.0000122 0.0003866 0
 22 0.0000133 0.0003585 0
 23 0.0000308 0.0003524 0
 24 0.0000187 0.0003507 1
 25 0.0000143 0.0003335 2
 26 0.0000143 0.0003233 0
 27 0.0000351 0.0003445 0
 28 0.0000239 0.0003252 1
 29 0.0000161 0.0003191 2
 30 0.0000285 0.0003136 3
 31 0.0000144 0.0003043 4
 32 0.0000145 0.0002937 0
 33 0.0000149 0.0002925 0
 34 0.0000197 0.0002681 1
 35 0.0000135 0.0002871 0
 36 0.0000111 0.0002964 1
 37 0.0000165 0.0002773 2
 38 0.0000121 0.0002741 3
 39 0.0000186 0.0002987 4
 40 0.0000399 0.0002765 5
 41 0.0000063 0.0002441 6
 42 0.0000078 0.0002267 0
 43 0.0000177 0.0002395 0
 44 0.0000131 0.0002255 1
 45 0.0000081 0.0002273 2
 46 0.0000142 0.0002358 3
 47 0.0000078 0.0002340 4
 48 0.0000111 0.0002213 5
 49 0.0000075 0.0002333 6
 50 0.0000193 0.0002264 7
 51 0.0000078 0.0002260 8
 52 0.0000106 0.0002248 9
Early Stopped at Epoch: 51
[Finished in 5608.4s]